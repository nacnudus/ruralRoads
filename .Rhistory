help(lower)
??lower
??"lower case"
??"lowercase"
library(stringr)
library(plyr)
library(stringr)
dfBooks <- data.frame(
Title = c(
"Harry Potter and the Philosopher's Stone"
, "Harry Potter and the Chamber of Secrets"
, "Harry Potter and the Prisoner of Azkaban"
, "Harry Potter and the Goblet of Fire"
, "Harry Potter and the Order of the Phoenix"
, "Harry Potter and the Half-Blood Prince"
, "Harry Potter and the Deathly Hallows"
)
, Name = c(
"PS"
, "CS"
, "PA"
, "GF"
, "OP"
, "HP"
, "DH"
)
)
rownames(dfBooks) <- dfBooks$Name
# add filepaths
booksDirectory <- "/home/nacnudus/R/HarryPotter/"
booksFileExtension <- " - J.K. Rowling.txt"
dfBooks$Path <- paste(booksDirectory,dfBooks$Title,booksFileExtension, sep = "")
# tidy up - was this deleting the files?
# rm(booksDirectory, booksFileExtension)
# Read the books
dfBooks$Text <- sapply(dfBooks$Path, function(x) (readLines(x)))
# tidy up - No don't!  It deletes the files!
# sapply(dfBooks$Path, function(x) (unlink(x)))
# Find the first line (there may be two or more because of
# samples from the other books).
dfBooks$FirstLine <- sapply(dfBooks$Text, function(x) (which(str_detect(x, "CHAPTER ONE"))[1]))
# Find the last line (there may be two or more because of
# samples from the other books).
dfBooks$FinalLine <- sapply(dfBooks$Text, function(x) (which(x == "Titles available in the Harry Potter series (in reading order):")[1]))-1
# Discard extraneous material.
dfBooks$PureText <- sapply(seq(1, 7, 1), function(x ,y ,z) (dfBooks$Text[[x]][y[x]:z[x]]), y = dfBooks$FirstLine, z = dfBooks$FinalLine)
# Split into single words.
dfBooks$SingleWords <- sapply(dfBooks$PureText, function(x) (unlist(str_split(x, " "))))
# Remove blanks
dfBooks$SingleWords <- dfBooks$SingleWords[[1]][dfBooks$SingleWords[[1]] != ""]
# Word count of each book
dfBooks$WordCount <- sapply(dfBooks$SingleWords, length)
# Group by 1000 words
dfBooks$Thousands <- sapply(dfBooks$SingleWords, function(x) (split(x, ceiling(seq_along(x)/1000))))
sapply(dfBooks$SingleWords, function(x) (x[x!= ""]))
dfBooks$SingleWords <- sapply(dfBooks$SingleWords, function(x) (x[x!= ""]))
dfBooks$SingleWords[[1]][dfBooks$SingleWords[[1]] == ""]
# Word count of each book
dfBooks$WordCount <- sapply(dfBooks$SingleWords, length)
# Group by 1000 words
dfBooks$Thousands <- sapply(dfBooks$SingleWords, function(x) (split(x, ceiling(seq_along(x)/1000))))
mylist <- list(1across = c("a", "b"), 2across = c("a", "b", "c"), 3across = list(Aacross = c("a", "b", "c", "d"), Bacross = c("a", "b", "c", "d", "e")))
mylist <- list(across1= c("a", "b"), across2 = c("a", "b", "c"), across3 = list(acrossA = c("a", "b", "c", "d"), acrossB = c("a", "b", "c", "d", "e")))
str(mylist)
mylist["across1"]
mylist[["across1"]]
mylist[["across1"]][2]
mylist[["across3"]]
mylist[["across3"]][2]
mylist[["across3"]][[2]
mylist[["across3"]][[2]]
mylist[["across3"]]["acrossB"]
mylist[["across3"]][["acrossB"]]
mylist[["across3"]][["acrossB"]][3]
mylist[["across3"]][["acrossB"]][[3]
]
library(tm)
help(system.file)
cPS <- Corpus(DirSource(dfBooks$Path[[1]]))
dfBooks$Path[[1]]
cCorpus <- Corpus(DirSource("/home/nacnudus/R/HarryPotter/"))
rm(cCorpus)
cPS <- Corpus(VectorSource(dfBooks$PureText[[1]]))
cPS <- tm_map(cPS, stripWhitespace)
cPS <- tm_map(cPS, tolower)
cPS <- tm_map(cPS, removePunctuation)
inspect(cPS)
help(left)
??left
paste(dfBooks$PureText[[1]], sep = " ")
help(paste)
plotwords <- sapply(seq(1,7,1), function (x) (CumSumWord("Snape", dfBooks$Thousands[[x]], dfBooks$Name[x])))
CumSumWord <- function(x, y, z) {
PlotWord <- x
PlotBook <- y
PlotTitle <- z
WordVector <- as.vector(sapply(PlotBook, function(x, y) (sum(str_count(x, y))), y = PlotWord))
xaxis <- seq_along(WordVector)
yaxis <- cumsum(WordVector)
plot(xaxis, yaxis, type = "n")
lines(xaxis, yaxis)
title(main = paste(z, "-", x))
list(Book = as.character(z), Word = x, WordVector = WordVector)
}
plotwords <- sapply(seq(1,7,1), function (x) (CumSumWord("Snape", dfBooks$Thousands[[x]], dfBooks$Name[x])))
cCorpus <- Corpus(DirSource("/home/nacnudus/R/HarryPotter/Texts/"))
cCorpus
cCorpus <- Corpus(DirSource("/home/nacnudus/R/HarryPotter/Texts/"))
library(tm)
cCorpus <- Corpus(DirSource("/home/nacnudus/R/HarryPotter/Texts/"))
cCorpus
columns(cCorpus)
column(cCorpus)
names(cCorpus)
names(cCorpus[1])
names(cCorpus[[1]])
head(cCorpus[[1]])
head(cCorpus[[1]],50)
cCorpus$Name <- Name = c(
"PS"
, "CS"
, "PA"
, "GF"
, "OP"
, "HP"
, "DH"
)
cCorpus$Name <- c(
"PS"
, "CS"
, "PA"
, "GF"
, "OP"
, "HP"
, "DH"
)
cCorpus$Name
names(cCorpus) <- cCorpus$Name
inspect(cCorpus$HP)
help(makeChunks)
chunksCorpus <- makeChunks(cCorpus, 1000)
chunksCorpus[[1]]
chunksCorpus[[1]][1]
chunksCorpus[[1]][1:20]
str_search(chunksCorpus[[1]])
library(stringr)
str_search(chunksCorpus[[1]])
str_detect(chunksCorpus[[1]], "Harry Potter")
library(lda)
install.packages(lda)
install.packages("lda")
Thousand <- dfBooks[[1]][1]
library(plyr)
library(stringr)
dfBooks <- data.frame(
Title = c(
"Harry Potter and the Philosopher's Stone"
, "Harry Potter and the Chamber of Secrets"
, "Harry Potter and the Prisoner of Azkaban"
, "Harry Potter and the Goblet of Fire"
, "Harry Potter and the Order of the Phoenix"
, "Harry Potter and the Half-Blood Prince"
, "Harry Potter and the Deathly Hallows"
)
, Name = c(
"PS"
, "CS"
, "PA"
, "GF"
, "OP"
, "HP"
, "DH"
)
)
rownames(dfBooks) <- dfBooks$Name
# add filepaths
booksDirectory <- "/home/nacnudus/R/HarryPotter/Texts"
booksFileExtension <- " - J.K. Rowling.txt"
dfBooks$Path <- paste(booksDirectory,dfBooks$Title,booksFileExtension, sep = "")
# tidy up - was this deleting the files?
# rm(booksDirectory, booksFileExtension)
# Read the books
dfBooks$Text <- sapply(dfBooks$Path, function(x) (readLines(x)))
# tidy up - No don't!  It deletes the files!
# sapply(dfBooks$Path, function(x) (unlink(x)))
# Find the first line (there may be two or more because of
# samples from the other books).
dfBooks$FirstLine <- sapply(dfBooks$Text, function(x) (which(str_detect(x, "CHAPTER ONE"))[1]))
# Find the last line (there may be two or more because of
# samples from the other books).
dfBooks$FinalLine <- sapply(dfBooks$Text, function(x) (which(x == "Titles available in the Harry Potter series (in reading order):")[1]))-1
# Discard extraneous material.
dfBooks$PureText <- sapply(seq(1, 7, 1), function(x ,y ,z) (dfBooks$Text[[x]][y[x]:z[x]]), y = dfBooks$FirstLine, z = dfBooks$FinalLine)
# Split into single words.
dfBooks$SingleWords <- sapply(dfBooks$PureText, function(x) (unlist(str_split(x, " "))))
# Remove blanks
dfBooks$SingleWords <- sapply(dfBooks$SingleWords, function(x) (x[x!= ""]))
# Word count of each book
dfBooks$WordCount <- sapply(dfBooks$SingleWords, length)
# Group by 1000 words
dfBooks$Thousands <- sapply(dfBooks$SingleWords, function(x) (split(x, ceiling(seq_along(x)/1000))))
dfBooks <- data.frame(
Title = c(
"Harry Potter and the Philosopher's Stone"
, "Harry Potter and the Chamber of Secrets"
, "Harry Potter and the Prisoner of Azkaban"
, "Harry Potter and the Goblet of Fire"
, "Harry Potter and the Order of the Phoenix"
, "Harry Potter and the Half-Blood Prince"
, "Harry Potter and the Deathly Hallows"
)
, Name = c(
"PS"
, "CS"
, "PA"
, "GF"
, "OP"
, "HP"
, "DH"
)
)
rownames(dfBooks) <- dfBooks$Name
# add filepaths
booksDirectory <- "/home/nacnudus/R/HarryPotter/Texts/"
booksFileExtension <- " - J.K. Rowling.txt"
dfBooks$Path <- paste(booksDirectory,dfBooks$Title,booksFileExtension, sep = "")
# tidy up - was this deleting the files?
# rm(booksDirectory, booksFileExtension)
# Read the books
dfBooks$Text <- sapply(dfBooks$Path, function(x) (readLines(x)))
# tidy up - No don't!  It deletes the files!
# sapply(dfBooks$Path, function(x) (unlink(x)))
# Find the first line (there may be two or more because of
# samples from the other books).
dfBooks$FirstLine <- sapply(dfBooks$Text, function(x) (which(str_detect(x, "CHAPTER ONE"))[1]))
# Find the last line (there may be two or more because of
# samples from the other books).
dfBooks$FinalLine <- sapply(dfBooks$Text, function(x) (which(x == "Titles available in the Harry Potter series (in reading order):")[1]))-1
# Discard extraneous material.
dfBooks$PureText <- sapply(seq(1, 7, 1), function(x ,y ,z) (dfBooks$Text[[x]][y[x]:z[x]]), y = dfBooks$FirstLine, z = dfBooks$FinalLine)
# Split into single words.
dfBooks$SingleWords <- sapply(dfBooks$PureText, function(x) (unlist(str_split(x, " "))))
# Remove blanks
dfBooks$SingleWords <- sapply(dfBooks$SingleWords, function(x) (x[x!= ""]))
# Word count of each book
dfBooks$WordCount <- sapply(dfBooks$SingleWords, length)
# Group by 1000 words
dfBooks$Thousands <- sapply(dfBooks$SingleWords, function(x) (split(x, ceiling(seq_along(x)/1000))))
Thousand <- dfBooks$Thousands[[1]]
Thousand
Thousand <- dfBooks$Thousands[[1]][1]
Thousand
Thousand <- dfBooks$Thousands[[1]][[1]]
Thousand
Para <- unsplit(Thousand)
help(unsplit)
Para <- str_join(Thousand, sep = " ")
Para
Para <- str_join(Thousand, sep = " ", collapse = TRUE)
Para <- str_join(Thousand, sep = " ", collapse = "TRUE" "")
Para <- str_join(Thousand, sep = " ", collapse = "TRUE" ")
Para <- str_join(Thousand, sep = " ", collapse = "TRUE")
Para
Para <- str_join(Thousand, collapse = " ")
Para
install.packages("rJava")
setwd("~/R/rural_roads")
load("meshblocks.RData")
str(meshblocks)
?`@`
?`[`
?ldply
require(plyr)
?ldply
fmd <- ldply(meshblocks, .fun = function(x) (fortify(x, "MB06")), .parallel = TRUE, .progress = "text")
fmd <- ddply(meshblocks, .fun = function(x) (fortify(x, "MB06")), .parallel = TRUE, .progress = "text")
?ddply
fmd <- adply(meshblocks, .fun = function(x) (fortify(x, "MB06")), .parallel = TRUE, .progress = "text")
str(meshblocks)
meshblocks[1]
meshblocks[[1]]
fortify(meshblocks[1])
require(ggplot2)
fortify(meshblocks[1])
?ddply
head(as.data.frame(meshblocks))
?spacialPolygonsDataFrame
?SpacialPolygonsDataFrame
length(meshblocks[1:10])
length(meshblocks[1:10, ])
str(meshblocks[1, ])
spplot(meshblocks, regions = "urban.rural")
spplot(meshblocks, regions = urban.rural)
spplot(meshblocks)
spplot(meshblocks, zcol = "MB06", regions = "urban.rural")
41362/74
